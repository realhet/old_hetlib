//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//Important note for CAL
//On hd7970  this needs the 11-12_amd_radeon_hd7900_win7_64 driver (or 12-2 on linux)
//Otherwise the kernel will freeze

var kernel:=asm_isa(
  isa79xx
  numVGprs 64
  numSgprs 105
  cb0size  128

  s_mov_b32 s8,$FFFFFFFF //minimum ticks       //ruins cb0 res const
  s_mov_b32 s9,156      //iteration count     //ruins cb0 res const
  @loop:
    s_memtime s[12:13]   //ruins kernel params
    s_waitcnt lgkmcnt(0)
;--------- test code begin ----------------------------

{this example shows that if you use an s_ instruction
after a v_ instruction that writes S regs, it vill
have +4 cycle latency}

#define pattern                   \
  v_add_i32  v55, vcc, v55, v55   \
  s_add_i32  s55, s55, s55

__for__(i in [1..100],pattern)

;--------- end of test code ---------------------------
    s_memtime s[14:15]   //ruins kernel params
    s_waitcnt lgkmcnt(0)
    s_sub_u32 s14, s14, s12
    s_min_u32 s8, s8, s14
    s_sub_u32 s9,s9,1
  s_cbranch_scc0 @loop

  s_mov_b32 exec_hi,0
  s_mov_b32 exec_lo,1
  s_sub_i32 s8,s8,$1C //s_wait cost
  s_lshr_b32 s8,s8,2  //1clk = 4cycles
  v_mov_b32 v0, s8//mintime
  v_mov_b32 v1,0  //addr
  buffer_atomic_umin v0, v1, s[4:7], 0 offen

  v_mov_b32 v6, $1234
  v_mov_b32 v7, 0
  tbuffer_store_format_x  v6, v7, s[8:11], 0 offen format:[BUF_DATA_FORMAT_32,BUF_NUM_FORMAT_FLOAT]
  s_endpgm
);

var i,j,k,dev:=cal.devices[0];
dev.activate;writeln(dev.dump);

var module:=dev.Context.NewModule(kernel);
writeln(module.disasm);

var rCB0:=dev.NewResource(rlLocal,4,128,0);
module['cb0']:=rCB0;

rCb0.IntVArray:=($0,0,0,0);

var rGlobal:=dev.NewResource(rlPinned,1,128*4,0);
module['uav0']:=rGlobal;

rGlobal.Ints[0]:=$FFFFFFFF;//^^initial min_time

for i:=0 to 2 do with Module.RunGrid(64*10000,1,0)do begin WaitFor;free;end;
with Module.RunGrid(64*10000,1,0) do begin
  if Success then begin
    writeln('Total exec time (including latency): '&rGlobal.Ints[0]&' cycles');
  end else writeLn('FAIL');

  writeln('elapsed:',ElapsedTime_sec);
  Free;
end;

